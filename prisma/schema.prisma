// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model AnimeCacheDocument {
  id   String                  @id @default(auto()) @map("_id") @db.ObjectId
  url  String                  @unique
  list AnimeListItemDocument[]
}

model AnimeListItemDocument {
  id       String             @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  url      String
  order    Int
  parentId String             @db.ObjectId
  parent   AnimeCacheDocument @relation(fields: [parentId], references: [id])
}

model SeriesLinkCacheDocument {
  id   String               @id @default(auto()) @map("_id") @db.ObjectId
  url  String
  list SeriesLinkDocument[]
}

model SeriesLinkDocument {
  id       String                  @id @default(auto()) @map("_id") @db.ObjectId
  label    String
  url      String
  order    Int
  parentId String                  @db.ObjectId
  parent   SeriesLinkCacheDocument @relation(fields: [parentId], references: [id])
}

model OtherSeriesCacheDocument {
  id   String                @id @default(auto()) @map("_id") @db.ObjectId
  url  String
  list OtherSeriesDocument[]
}

model OtherSeriesDocument {
  id       String                   @id @default(auto()) @map("_id") @db.ObjectId
  label    String
  url      String
  episodes OtherSeriesLink[]
  parentId String                   @db.ObjectId
  parent   OtherSeriesCacheDocument @relation(fields: [parentId], references: [id])
}

model OtherSeriesLink {
  id       String              @id @default(auto()) @map("_id") @db.ObjectId
  label    String
  url      String
  order    Int
  streams  StreamDocument[]
  parentId String              @db.ObjectId
  parent   OtherSeriesDocument @relation(fields: [parentId], references: [id])
}

model StreamDocument {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  stream    String
  videoLink String
  parentId  String          @db.ObjectId
  parent    OtherSeriesLink @relation(fields: [parentId], references: [id])
}

model AniListMediaCacheDocument {
  id         String                @id @default(auto()) @map("_id") @db.ObjectId
  cacheQuery String
  media      AniListMediaDocument?
}

model AniListMediaDocument {
  id          String                     @id @default(auto()) @map("_id") @db.ObjectId
  parent      AniListMediaCacheDocument  @relation(references: [id], fields: [parentId])
  parentId    String                     @db.ObjectId @unique
  source      String
  isMal       Int
  bannerImage String
  episodes    Int?
  title       AniListMediaTitleDocument?
  coverImage  AniListMediaCoverDocument?
}

model AniListMediaTitleDocument {
  id       String               @id @default(auto()) @map("_id") @db.ObjectId
  romaji   String
  english  String
  native   String
  parentId String               @db.ObjectId @unique
  parent   AniListMediaDocument @relation(references: [id], fields: [parentId])
}

model AniListMediaCoverDocument {
  id         String               @id @default(auto()) @map("_id") @db.ObjectId
  extraLarge String
  large      String
  medium     String
  parentId   String               @db.ObjectId @unique
  parent     AniListMediaDocument @relation(references: [id], fields: [parentId])
}

model CacheDocument {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  key    String @unique
  object String
}
